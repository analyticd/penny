foregroundNums = [30..37]
backgroundNums = [40..47]
names = ["black", "red", "green", "yellow", "blue", "magenta", "cyan", "white"]
nums256 = [0..255]

foregroundFn num name =
  ("color8_f_" ++ name ++ " :: Foreground8\n"
  ++ "color8_f_" ++ name ++ " = Foreground8 . code $ " ++ show num ++ "\n\n"
  , "color8_f_" ++ name ++ ",\n")

backgroundFn num name =
  ("color8_b_" ++ name ++ " :: Background8\n"
  ++ "color8_b_" ++ name ++ " = Background8 . code $ " ++ show num ++ "\n\n"
  , "color8_b_" ++ name ++ ",\n")

foreground256 num =
  ("color256_f_" ++ show num ++ " :: Foreground256\n"
  ++ "color256_f_" ++ show num ++ " = Foreground256 . code $ \"38;5;" ++ show num ++ "\"" ++ "\n\n"
  , "color256_f_" ++ show num ++ ",\n")

background256 num =
  ("color256_b_" ++ show num ++ " :: Background256\n"
   ++ "color256_b_" ++ show num ++ " = Background256 . code $ \"48;5;" ++ show num ++ "\"" ++ "\n\n"
   , "color256_b_" ++ show num ++ ",\n")

main = do
  let psF8 = (zipWith foregroundFn foregroundNums names)
      psB8 = (zipWith backgroundFn foregroundNums names)
      psF256 = map foreground256 nums256
      psB256 = map background256 nums256
  putStr . concat . map ("  " ++) . map snd . concat $ [psF8, psB8, psF256, psB256]
  putStr . concatMap fst . concat $ [psF8, psB8, psF256, psB256]
  return ()
