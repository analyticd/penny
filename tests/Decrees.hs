-- | This module generated by the Quickpull package.
-- Quickpull is available at:
-- <http://www.github.com/massysett/quickpull>

module Decrees where

import Quickpull
import qualified Penny.Copper.Properties

decrees :: [Decree]
decrees =

  [ Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 78, qName = "prop_RadixRadCom"} ) ( Single Penny.Copper.Properties.prop_RadixRadCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 81, qName = "prop_RadixRadPer"} ) ( Single Penny.Copper.Properties.prop_RadixRadPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 84, qName = "prop_Grouper"} ) ( Single Penny.Copper.Properties.prop_Grouper )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 87, qName = "prop_RadCom"} ) ( Single Penny.Copper.Properties.prop_RadCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 90, qName = "prop_RadPer"} ) ( Single Penny.Copper.Properties.prop_RadPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 93, qName = "prop_Zero"} ) ( Single Penny.Copper.Properties.prop_Zero )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 96, qName = "prop_nilUngroupedPer"} ) ( Single Penny.Copper.Properties.prop_nilUngroupedPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 99, qName = "prop_nilUngroupedCom"} ) ( Single Penny.Copper.Properties.prop_nilUngroupedCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 102, qName = "prop_nilGroupedCom"} ) ( Single Penny.Copper.Properties.prop_nilGroupedCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 105, qName = "prop_nilGroupedPer"} ) ( Single Penny.Copper.Properties.prop_nilGroupedPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 108, qName = "prop_nilPer"} ) ( Single Penny.Copper.Properties.prop_nilPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 111, qName = "prop_nilCom"} ) ( Single Penny.Copper.Properties.prop_nilCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 116, qName = "prop_BG8Per"} ) ( Single Penny.Copper.Properties.prop_BG8Per )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 119, qName = "prop_BG7Per"} ) ( Single Penny.Copper.Properties.prop_BG7Per )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 122, qName = "prop_BG6Per"} ) ( Single Penny.Copper.Properties.prop_BG6Per )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 125, qName = "prop_BG5Per"} ) ( Single Penny.Copper.Properties.prop_BG5Per )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 128, qName = "prop_BG1Per"} ) ( Single Penny.Copper.Properties.prop_BG1Per )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 131, qName = "prop_BrimUngroupedPer"} ) ( Single Penny.Copper.Properties.prop_BrimUngroupedPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 134, qName = "prop_BrimGroupedPer"} ) ( Single Penny.Copper.Properties.prop_BrimGroupedPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 137, qName = "prop_BrimPer"} ) ( Single Penny.Copper.Properties.prop_BrimPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 140, qName = "prop_NilOrBrimScalarPer"} ) ( Single Penny.Copper.Properties.prop_NilOrBrimScalarPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 143, qName = "prop_BG8Com"} ) ( Single Penny.Copper.Properties.prop_BG8Com )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 146, qName = "prop_BG7Com"} ) ( Single Penny.Copper.Properties.prop_BG7Com )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 149, qName = "prop_BG6Com"} ) ( Single Penny.Copper.Properties.prop_BG6Com )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 152, qName = "prop_BG5Com"} ) ( Single Penny.Copper.Properties.prop_BG5Com )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 155, qName = "prop_BG1Com"} ) ( Single Penny.Copper.Properties.prop_BG1Com )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 158, qName = "prop_BrimUngroupedCom"} ) ( Single Penny.Copper.Properties.prop_BrimUngroupedCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 161, qName = "prop_BrimGroupedCom"} ) ( Single Penny.Copper.Properties.prop_BrimGroupedCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 164, qName = "prop_BrimCom"} ) ( Single Penny.Copper.Properties.prop_BrimCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 167, qName = "prop_NilOrBrimScalarCom"} ) ( Single Penny.Copper.Properties.prop_NilOrBrimScalarCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 172, qName = "prop_Hash"} ) ( Single Penny.Copper.Properties.prop_Hash )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 175, qName = "prop_Newline"} ) ( Single Penny.Copper.Properties.prop_Newline )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 178, qName = "prop_Comment"} ) ( Single Penny.Copper.Properties.prop_Comment )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 181, qName = "prop_DigitsFour"} ) ( Single Penny.Copper.Properties.prop_DigitsFour )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 184, qName = "prop_Digits1or2"} ) ( Single Penny.Copper.Properties.prop_Digits1or2 )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 187, qName = "prop_DateSep"} ) ( Single Penny.Copper.Properties.prop_DateSep )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 190, qName = "prop_DateA"} ) ( Single Penny.Copper.Properties.prop_DateA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 193, qName = "prop_Colon"} ) ( Single Penny.Copper.Properties.prop_Colon )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 196, qName = "prop_TimeA"} ) ( Single Penny.Copper.Properties.prop_TimeA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 199, qName = "prop_ZoneA"} ) ( Single Penny.Copper.Properties.prop_ZoneA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 202, qName = "prop_DoubleQuote"} ) ( Single Penny.Copper.Properties.prop_DoubleQuote )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 205, qName = "prop_Backslash"} ) ( Single Penny.Copper.Properties.prop_Backslash )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 208, qName = "prop_White"} ) ( Single Penny.Copper.Properties.prop_White )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 211, qName = "prop_Whites"} ) ( Single Penny.Copper.Properties.prop_Whites )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 214, qName = "prop_EscPayload"} ) ( Single Penny.Copper.Properties.prop_EscPayload )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 217, qName = "prop_EscSeq"} ) ( Single Penny.Copper.Properties.prop_EscSeq )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 220, qName = "prop_QuotedChar"} ) ( Single Penny.Copper.Properties.prop_QuotedChar )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 223, qName = "prop_QuotedString"} ) ( Single Penny.Copper.Properties.prop_QuotedString )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 226, qName = "prop_UnquotedString"} ) ( Single Penny.Copper.Properties.prop_UnquotedString )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 229, qName = "prop_UnquotedCommodityOnLeft"} ) ( Single Penny.Copper.Properties.prop_UnquotedCommodityOnLeft )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 232, qName = "prop_UnquotedCommodityOnRight"} ) ( Single Penny.Copper.Properties.prop_UnquotedCommodityOnRight )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 235, qName = "prop_QuotedCommodity"} ) ( Single Penny.Copper.Properties.prop_QuotedCommodity )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 238, qName = "prop_CommodityA"} ) ( Single Penny.Copper.Properties.prop_CommodityA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 241, qName = "prop_CommodityOnLeft"} ) ( Single Penny.Copper.Properties.prop_CommodityOnLeft )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 244, qName = "prop_CommodityOnRight"} ) ( Single Penny.Copper.Properties.prop_CommodityOnRight )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 247, qName = "prop_Backtick"} ) ( Single Penny.Copper.Properties.prop_Backtick )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 250, qName = "prop_NonNeutral"} ) ( Single Penny.Copper.Properties.prop_NonNeutral )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 253, qName = "prop_NeutralOrNon"} ) ( Single Penny.Copper.Properties.prop_NeutralOrNon )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 256, qName = "prop_TrioA"} ) ( Single Penny.Copper.Properties.prop_TrioA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 259, qName = "prop_OpenSquare"} ) ( Single Penny.Copper.Properties.prop_OpenSquare )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 262, qName = "prop_CloseSquare"} ) ( Single Penny.Copper.Properties.prop_CloseSquare )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 265, qName = "prop_IntegerA"} ) ( Single Penny.Copper.Properties.prop_IntegerA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 268, qName = "prop_ScalarA"} ) ( Single Penny.Copper.Properties.prop_ScalarA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 271, qName = "prop_BracketedForest"} ) ( Single Penny.Copper.Properties.prop_BracketedForest )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 274, qName = "prop_TreeA"} ) ( Single Penny.Copper.Properties.prop_TreeA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 277, qName = "prop_TopLineA"} ) ( Single Penny.Copper.Properties.prop_TopLineA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 280, qName = "prop_PostingA"} ) ( Single Penny.Copper.Properties.prop_PostingA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 283, qName = "prop_PostingsA"} ) ( Single Penny.Copper.Properties.prop_PostingsA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 286, qName = "prop_Semicolon"} ) ( Single Penny.Copper.Properties.prop_Semicolon )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 289, qName = "prop_OpenCurly"} ) ( Single Penny.Copper.Properties.prop_OpenCurly )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 292, qName = "prop_CloseCurly"} ) ( Single Penny.Copper.Properties.prop_CloseCurly )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 295, qName = "prop_CommaA"} ) ( Single Penny.Copper.Properties.prop_CommaA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 298, qName = "prop_PostingList"} ) ( Single Penny.Copper.Properties.prop_PostingList )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 301, qName = "prop_TransactionA"} ) ( Single Penny.Copper.Properties.prop_TransactionA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 304, qName = "prop_AtSign"} ) ( Single Penny.Copper.Properties.prop_AtSign )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 307, qName = "prop_PriceA"} ) ( Single Penny.Copper.Properties.prop_PriceA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 310, qName = "prop_ExchA"} ) ( Single Penny.Copper.Properties.prop_ExchA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 313, qName = "prop_FileItem"} ) ( Single Penny.Copper.Properties.prop_FileItem )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 316, qName = "prop_FileItems"} ) ( Single Penny.Copper.Properties.prop_FileItems )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 319, qName = "prop_File"} ) ( Single Penny.Copper.Properties.prop_File )
  ]
