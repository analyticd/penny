# A Penny file consists of a list of transactions and prices.  First we
# will consider transactions. A transaction consists of a "top line",
# which has information common to the whole transaction, and a number of
# "postings".
# 
# The top line is optional.  If you have one, it consists of a list of
# rose trees:
# 
# http://en.wikipedia.org/wiki/Rose_tree
# 
# Each node of the rose tree can be one of the following things:
# 
# * a date, formatted as YYYY-MM-DD or YYYY/MM/DD
# 
# * a time, formatted as HH:MM or HH:MM:SS
# 
# * a time zone, formatted as +MMMM or -MMMM
# 
# * a number, which can be any non-negative integer, or
# 
# * arbitrary text.  Arbitrary text can be quoted with double quotation
#   marks, or it can be unquoted if it contains no special characters.
# 
# Each node has an optional list of child rose trees.
# 
# This is a flexible framework that allows you to use parent nodes as
# labels and child nodes as corresponding values.
 
# A top line is followed by a number of postings.  A posting consists
# of an optional amount, followed by an optional list of rose trees.
# If there is a list of rose trees in the posting, it must be
# bracketed (unlike the top line, where there can be no brackets).

# Standard field names:
#
# payee
# account
# tags
# flag
# number
# date
# time
# zone
#
# To use standard field names, use the name of the field as the root
# node, and put your data in the child nodes.
#
# Shortcuts for standard fields:
#
# payee - in the top line, the first tree whose root node is text,
# that has no children, and whose name is not surrounded by parentheses,
# is a payee.  There is no shortcut to enter payees in postings.
#
# account - in postings, the first tree whose root node is empty and
# that has a non-empty list of children is the account.  There is no shortcut
# to enter accounts in top lines.
#
# tags - in the top line, the first tree whose root node is empty and
# that has a non-empty list of children is a set of tags.  There is no
# shortcut to enter tags into postings.
#
# flag - in the posting, the first tree whose root node is text, is
# surrounded by parentheses, and that has no children is the flag.  If
# no such node is found in the posting, search the top line using the
# same criteria.
#
# number - in the posting, the first tree whose root node is an integer
# and that has no children is the number.  If no such node is found in the
# posting, search the top line using the same criteria.
#
# date - in the top line, the first tree whose root node is a date and
# that has no children is the date.  There is no shortcut to enter
# dates in postings.
#
# time - in the top line, the first tree whose root node is a time and
# that has no children is the time.  There is no shortcut to enter times
# in postings.
#
# zone - in the top line, the first tree whose root node is a zone and
# that has no children is the zone.  There is no shortcut to enter zones
# in postings.
#
# For all standard fields, first a search is performed in the posting
# using the standard field name.  Then a search is performed in the top
# line using the standard field name.  Then, a search is performed using the
# shortcut criteria given above.  For all standard fields except the tags
# field, only the first matching field is used.  For the tags field, all
# matching child trees are concatenated into a single sequence.

2014-06-30, "Urdu and Son", (R), [Garden]
  { < $230.03 [[Expenses, Education], 101 ]
  ; [[Assets, Current, Checking]]
  }

# This is a price.  It is a date (required) and an
# optional time and time zone.  Next is the from commodity,
# then the to commodity and the quantity.
@2014-01-02 VBISX $10.02
