digraph G {
node [color=red];
"Data.Sequence.Seq Deka.Native.Abstract.Decem" [color=black];
"Deka.Dec.Sign" [color=black];
"Deka.Dec.Sign Sign0" [shape=box, label=Sign0, color=black];
"Deka.Dec.Sign" -> "Deka.Dec.Sign Sign0" [style=dotted];
"Deka.Dec.Sign Sign1" [shape=box, label=Sign1, color=black];
"Deka.Dec.Sign" -> "Deka.Dec.Sign Sign1" [style=dotted];
"Deka.Native.Abstract.Decem" [color=black];
"Deka.Native.Abstract.Decem D0" [shape=box, label=D0, color=black];
"Deka.Native.Abstract.Decem" -> "Deka.Native.Abstract.Decem D0" [style=dotted];
"Deka.Native.Abstract.Decem Nonem" [shape=box, label=Nonem, color=black];
"Deka.Native.Abstract.Decem Nonem" -> "Deka.Native.Abstract.Novem";
"Deka.Native.Abstract.Decem" -> "Deka.Native.Abstract.Decem Nonem" [style=dotted];
"Deka.Native.Abstract.Novem" [color=black];
"Deka.Native.Abstract.Novem D1" [shape=box, label=D1, color=black];
"Deka.Native.Abstract.Novem" -> "Deka.Native.Abstract.Novem D1" [style=dotted];
"Deka.Native.Abstract.Novem D2" [shape=box, label=D2, color=black];
"Deka.Native.Abstract.Novem" -> "Deka.Native.Abstract.Novem D2" [style=dotted];
"Deka.Native.Abstract.Novem D3" [shape=box, label=D3, color=black];
"Deka.Native.Abstract.Novem" -> "Deka.Native.Abstract.Novem D3" [style=dotted];
"Deka.Native.Abstract.Novem D4" [shape=box, label=D4, color=black];
"Deka.Native.Abstract.Novem" -> "Deka.Native.Abstract.Novem D4" [style=dotted];
"Deka.Native.Abstract.Novem D5" [shape=box, label=D5, color=black];
"Deka.Native.Abstract.Novem" -> "Deka.Native.Abstract.Novem D5" [style=dotted];
"Deka.Native.Abstract.Novem D6" [shape=box, label=D6, color=black];
"Deka.Native.Abstract.Novem" -> "Deka.Native.Abstract.Novem D6" [style=dotted];
"Deka.Native.Abstract.Novem D7" [shape=box, label=D7, color=black];
"Deka.Native.Abstract.Novem" -> "Deka.Native.Abstract.Novem D7" [style=dotted];
"Deka.Native.Abstract.Novem D8" [shape=box, label=D8, color=black];
"Deka.Native.Abstract.Novem" -> "Deka.Native.Abstract.Novem D8" [style=dotted];
"Deka.Native.Abstract.Novem D9" [shape=box, label=D9, color=black];
"Deka.Native.Abstract.Novem" -> "Deka.Native.Abstract.Novem D9" [style=dotted];
"Penny.Cement.T" [color=black];
"Penny.Cement.T T" [shape=box, label=T, color=black];
"Penny.Cement.T T" -> "Penny.Coeff.T";
"Penny.Cement.T T" -> "Penny.Exp.T";
"Penny.Cement.T" -> "Penny.Cement.T T" [style=dotted];
"Penny.Exp.T" [color=black];
"Penny.Exp.T Zero" [shape=box, label=Zero, color=black];
"Penny.Exp.T" -> "Penny.Exp.T Zero" [style=dotted];
"Penny.Exp.T Negative" [shape=box, label=Negative, color=black];
"Penny.Exp.T Negative" -> "Penny.NovDecs.T";
"Penny.Exp.T" -> "Penny.Exp.T Negative" [style=dotted];
"Penny.Coeff.T" [color=black];
"Penny.Coeff.T Zero" [shape=box, label=Zero, color=black];
"Penny.Coeff.T" -> "Penny.Coeff.T Zero" [style=dotted];
"Penny.Coeff.T NonZero" [shape=box, label=NonZero, color=black];
"Penny.Coeff.T NonZero" -> "Penny.NovSign.T";
"Penny.Coeff.T" -> "Penny.Coeff.T NonZero" [style=dotted];
"Penny.Concrete.T" [color=black];
"Penny.Decems.T" [color=black];
"Penny.Decems.T T" [shape=box, label=T, color=black];
"Penny.Decems.T T" -> "Data.Sequence.Seq Deka.Native.Abstract.Decem";
"Penny.Decems.T" -> "Penny.Decems.T T" [style=dotted];
"Penny.NG1.T Penny.RadCom.T" [color=black];
"Penny.NG1.T Penny.RadCom.T T" [shape=box, label=T, color=black];
"Penny.NG1.T Penny.RadCom.T T" -> "Penny.Radix.T Penny.RadCom.T";
"Penny.NG1.T Penny.RadCom.T T" -> "Penny.Zeroes.T";
"Penny.NG1.T Penny.RadCom.T T" -> "Penny.RadCom.T";
"Penny.NG1.T Penny.RadCom.T T" -> "Penny.Zeroes.T";
"Penny.NG1.T Penny.RadCom.T T" -> "Data.Sequence.Seq (Penny.ZGroup.T Penny.RadCom.T)";
"Penny.NG1.T Penny.RadCom.T" -> "Penny.NG1.T Penny.RadCom.T T" [style=dotted];
"Penny.NG1.T Penny.RadPer.T" [color=black];
"Penny.NG1.T Penny.RadPer.T T" [shape=box, label=T, color=black];
"Penny.NG1.T Penny.RadPer.T T" -> "Penny.Radix.T Penny.RadPer.T";
"Penny.NG1.T Penny.RadPer.T T" -> "Penny.Zeroes.T";
"Penny.NG1.T Penny.RadPer.T T" -> "Penny.RadPer.T";
"Penny.NG1.T Penny.RadPer.T T" -> "Penny.Zeroes.T";
"Penny.NG1.T Penny.RadPer.T T" -> "Data.Sequence.Seq (Penny.ZGroup.T Penny.RadPer.T)";
"Penny.NG1.T Penny.RadPer.T" -> "Penny.NG1.T Penny.RadPer.T T" [style=dotted];
"Penny.Nil.T Penny.RadCom.T" [color=black];
"Penny.Nil.T Penny.RadCom.T Ungrouped" [shape=box, label=Ungrouped, color=black];
"Penny.Nil.T Penny.RadCom.T Ungrouped" -> "Penny.NilUngrouped.T Penny.RadCom.T";
"Penny.Nil.T Penny.RadCom.T" -> "Penny.Nil.T Penny.RadCom.T Ungrouped" [style=dotted];
"Penny.Nil.T Penny.RadCom.T Grouped" [shape=box, label=Grouped, color=black];
"Penny.Nil.T Penny.RadCom.T Grouped" -> "Penny.NilGrouped.T Penny.RadCom.T";
"Penny.Nil.T Penny.RadCom.T" -> "Penny.Nil.T Penny.RadCom.T Grouped" [style=dotted];
"Penny.Nil.T Penny.RadPer.T" [color=black];
"Penny.Nil.T Penny.RadPer.T Ungrouped" [shape=box, label=Ungrouped, color=black];
"Penny.Nil.T Penny.RadPer.T Ungrouped" -> "Penny.NilUngrouped.T Penny.RadPer.T";
"Penny.Nil.T Penny.RadPer.T" -> "Penny.Nil.T Penny.RadPer.T Ungrouped" [style=dotted];
"Penny.Nil.T Penny.RadPer.T Grouped" [shape=box, label=Grouped, color=black];
"Penny.Nil.T Penny.RadPer.T Grouped" -> "Penny.NilGrouped.T Penny.RadPer.T";
"Penny.Nil.T Penny.RadPer.T" -> "Penny.Nil.T Penny.RadPer.T Grouped" [style=dotted];
"Penny.NilGrouped Penny.RadCom.T" [color=black];
"Penny.NilGrouped Penny.RadCom.T LeadingZero" [shape=box, label=LeadingZero, color=black];
"Penny.NilGrouped Penny.RadCom.T LeadingZero" -> "Penny.Zng.T Penny.RadCom.T";
"Penny.NilGrouped Penny.RadCom.T" -> "Penny.NilGrouped Penny.RadCom.T LeadingZero" [style=dotted];
"Penny.NilGrouped Penny.RadCom.T NoLeadingZero" [shape=box, label=NoLeadingZero, color=black];
"Penny.NilGrouped Penny.RadCom.T NoLeadingZero" -> "Penny.NG1.T Penny.RadCom.T";
"Penny.NilGrouped Penny.RadCom.T" -> "Penny.NilGrouped Penny.RadCom.T NoLeadingZero" [style=dotted];
"Penny.NilGrouped Penny.RadPer.T" [color=black];
"Penny.NilGrouped Penny.RadPer.T LeadingZero" [shape=box, label=LeadingZero, color=black];
"Penny.NilGrouped Penny.RadPer.T LeadingZero" -> "Penny.Zng.T Penny.RadPer.T";
"Penny.NilGrouped Penny.RadPer.T" -> "Penny.NilGrouped Penny.RadPer.T LeadingZero" [style=dotted];
"Penny.NilGrouped Penny.RadPer.T NoLeadingZero" [shape=box, label=NoLeadingZero, color=black];
"Penny.NilGrouped Penny.RadPer.T NoLeadingZero" -> "Penny.NG1.T Penny.RadPer.T";
"Penny.NilGrouped Penny.RadPer.T" -> "Penny.NilGrouped Penny.RadPer.T NoLeadingZero" [style=dotted];
"Penny.NilUngrouped.T Penny.RadCom.T" [color=black];
"Penny.NilUngrouped.T Penny.RadCom.T LeadingZero" [shape=box, label=LeadingZero, color=black];
"Penny.NilUngrouped.T Penny.RadCom.T LeadingZero" -> "Penny.Znu1.T Penny.RadCom.T";
"Penny.NilUngrouped.T Penny.RadCom.T" -> "Penny.NilUngrouped.T Penny.RadCom.T LeadingZero" [style=dotted];
"Penny.NilUngrouped.T Penny.RadCom.T NoLeadingZero" [shape=box, label=NoLeadingZero, color=black];
"Penny.NilUngrouped.T Penny.RadCom.T NoLeadingZero" -> "Penny.RadZ.T Penny.RadCom.T";
"Penny.NilUngrouped.T Penny.RadCom.T" -> "Penny.NilUngrouped.T Penny.RadCom.T NoLeadingZero" [style=dotted];
"Penny.NilUngrouped.T Penny.RadPer.T" [color=black];
"Penny.NilUngrouped.T Penny.RadPer.T LeadingZero" [shape=box, label=LeadingZero, color=black];
"Penny.NilUngrouped.T Penny.RadPer.T LeadingZero" -> "Penny.Znu1.T Penny.RadPer.T";
"Penny.NilUngrouped.T Penny.RadPer.T" -> "Penny.NilUngrouped.T Penny.RadPer.T LeadingZero" [style=dotted];
"Penny.NilUngrouped.T Penny.RadPer.T NoLeadingZero" [shape=box, label=NoLeadingZero, color=black];
"Penny.NilUngrouped.T Penny.RadPer.T NoLeadingZero" -> "Penny.RadZ.T Penny.RadPer.T";
"Penny.NilUngrouped.T Penny.RadPer.T" -> "Penny.NilUngrouped.T Penny.RadPer.T NoLeadingZero" [style=dotted];
"Penny.NonZero.T" [color=black];
"Penny.NovSign.T" [color=black];
"Penny.NovSign.T T" [shape=box, label=T, color=black];
"Penny.NovSign.T T" -> "Penny.NovDecs.T";
"Penny.NovSign.T T" -> "Deka.Dec.Sign";
"Penny.NovSign.T" -> "Penny.NovSign.T T" [style=dotted];
"Penny.NovDecs.T" [color=black];
"Penny.NovDecs.T T" [shape=box, label=T, color=black];
"Penny.NovDecs.T T" -> "Deka.Native.Abstract.Novem";
"Penny.NovDecs.T T" -> "Penny.Decems.T";
"Penny.NovDecs.T" -> "Penny.NovDecs.T T" [style=dotted];
"Penny.RadCom.T" [color=black];
"Penny.RadCom.T T" [shape=box, label=T, color=black];
"Penny.RadCom.T" -> "Penny.RadCom.T T" [style=dotted];
"Penny.Radix.T Penny.RadCom.T" [color=black];
"Penny.Radix.T Penny.RadCom.T T" [shape=box, label=T, color=black];
"Penny.Radix.T Penny.RadCom.T" -> "Penny.Radix.T Penny.RadCom.T T" [style=dotted];
"Penny.RadPer.T" [color=black];
"Penny.RadPer.T T" [shape=box, label=T, color=black];
"Penny.RadPer.T" -> "Penny.RadPer.T T" [style=dotted];
"Penny.Radix.T Penny.RadPer.T" [color=black];
"Penny.Radix.T Penny.RadPer.T T" [shape=box, label=T, color=black];
"Penny.Radix.T Penny.RadPer.T" -> "Penny.Radix.T Penny.RadPer.T T" [style=dotted];
"Penny.Radun.T Penny.RadCom.T" [color=black];
"Penny.Radun.T Penny.RadCom.T T" [shape=box, label=T, color=black];
"Penny.Radun.T Penny.RadCom.T T" -> "Penny.Radix.T Penny.RadCom.T";
"Penny.Radun.T Penny.RadCom.T T" -> "Prelude.Maybe Penny.Zeroes.T";
"Penny.Radun.T Penny.RadCom.T" -> "Penny.Radun.T Penny.RadCom.T T" [style=dotted];
"Penny.Radun.T Penny.RadPer.T" [color=black];
"Penny.Radun.T Penny.RadPer.T T" [shape=box, label=T, color=black];
"Penny.Radun.T Penny.RadPer.T T" -> "Penny.Radix.T Penny.RadPer.T";
"Penny.Radun.T Penny.RadPer.T T" -> "Prelude.Maybe Penny.Zeroes.T";
"Penny.Radun.T Penny.RadPer.T" -> "Penny.Radun.T Penny.RadPer.T T" [style=dotted];
"Penny.Qty.T" [color=black];
"Penny.Qty.T T" [shape=box, label=T, color=black];
"Penny.Qty.T T" -> "Penny.Concrete.T";
"Penny.Qty.T" -> "Penny.Qty.T T" [style=dotted];
"Penny.Zeroes.T" [color=black];
"Penny.Zeroes.T T" [shape=box, label=T, color=black];
"Penny.Zeroes.T T" -> "Penny.NonZero.T";
"Penny.Zeroes.T" -> "Penny.Zeroes.T T" [style=dotted];
"Penny.RadZ.T Penny.RadCom.T" [color=black];
"Penny.RadZ.T Penny.RadCom.T T" [shape=box, label=T, color=black];
"Penny.RadZ.T Penny.RadCom.T T" -> "Penny.Radix.T Penny.RadCom.T";
"Penny.RadZ.T Penny.RadCom.T T" -> "Penny.Zeroes.T";
"Penny.RadZ.T Penny.RadCom.T" -> "Penny.RadZ.T Penny.RadCom.T T" [style=dotted];
"Penny.RadZ.T Penny.RadPer.T" [color=black];
"Penny.RadZ.T Penny.RadPer.T T" [shape=box, label=T, color=black];
"Penny.RadZ.T Penny.RadPer.T T" -> "Penny.Radix.T Penny.RadPer.T";
"Penny.RadZ.T Penny.RadPer.T T" -> "Penny.Zeroes.T";
"Penny.RadZ.T Penny.RadPer.T" -> "Penny.RadZ.T Penny.RadPer.T T" [style=dotted];
"Data.Sequence.Seq (Penny.ZGroup.T Penny.RadCom.T)" [color=black];
"Data.Sequence.Seq (Penny.ZGroup.T Penny.RadPer.T)" [color=black];
"Penny.Zero.T" [color=black];
"Penny.Zero.T T" [shape=box, label=T, color=black];
"Penny.Zero.T" -> "Penny.Zero.T T" [style=dotted];
"Penny.Zng.T Penny.RadCom.T" [color=black];
"Penny.Zng.T Penny.RadCom.T T" [shape=box, label=T, color=black];
"Penny.Zng.T Penny.RadCom.T T" -> "Penny.Zero.T";
"Penny.Zng.T Penny.RadCom.T T" -> "Penny.NG1.T Penny.RadCom.T";
"Penny.Zng.T Penny.RadCom.T" -> "Penny.Zng.T Penny.RadCom.T T" [style=dotted];
"Penny.Zng.T Penny.RadPer.T" [color=black];
"Penny.Zng.T Penny.RadPer.T T" [shape=box, label=T, color=black];
"Penny.Zng.T Penny.RadPer.T T" -> "Penny.Zero.T";
"Penny.Zng.T Penny.RadPer.T T" -> "Penny.NG1.T Penny.RadPer.T";
"Penny.Zng.T Penny.RadPer.T" -> "Penny.Zng.T Penny.RadPer.T T" [style=dotted];
"Penny.Znu1.T Penny.RadCom.T" [color=black];
"Penny.Znu1.T Penny.RadCom.T T" [shape=box, label=T, color=black];
"Penny.Znu1.T Penny.RadCom.T T" -> "Penny.Zero.T";
"Penny.Znu1.T Penny.RadCom.T T" -> "Prelude.Maybe (Penny.Radun.T Penny.RadCom.T)";
"Penny.Znu1.T Penny.RadCom.T" -> "Penny.Znu1.T Penny.RadCom.T T" [style=dotted];
"Penny.Znu1.T Penny.RadPer.T" [color=black];
"Penny.Znu1.T Penny.RadPer.T T" [shape=box, label=T, color=black];
"Penny.Znu1.T Penny.RadPer.T T" -> "Penny.Zero.T";
"Penny.Znu1.T Penny.RadPer.T T" -> "Prelude.Maybe (Penny.Radun.T Penny.RadPer.T)";
"Penny.Znu1.T Penny.RadPer.T" -> "Penny.Znu1.T Penny.RadPer.T T" [style=dotted];
"Prelude.Bool" [color=black];
"Prelude.Bool True" [shape=box, label=True, color=black];
"Prelude.Bool" -> "Prelude.Bool True" [style=dotted];
"Prelude.Bool False" [shape=box, label=False, color=black];
"Prelude.Bool" -> "Prelude.Bool False" [style=dotted];
"Prelude.Int" [color=black];
"Prelude.Maybe (Penny.Radun.T Penny.RadCom.T)" [color=black];
"Prelude.Maybe (Penny.Radun.T Penny.RadCom.T) Nothing" [shape=box, label=Nothing, color=black];
"Prelude.Maybe (Penny.Radun.T Penny.RadCom.T)" -> "Prelude.Maybe (Penny.Radun.T Penny.RadCom.T) Nothing" [style=dotted];
"Prelude.Maybe (Penny.Radun.T Penny.RadCom.T) Just" [shape=box, label=Just, color=black];
"Prelude.Maybe (Penny.Radun.T Penny.RadCom.T) Just" -> "Penny.Radun.T Penny.RadCom.T";
"Prelude.Maybe (Penny.Radun.T Penny.RadCom.T)" -> "Prelude.Maybe (Penny.Radun.T Penny.RadCom.T) Just" [style=dotted];
"Prelude.Maybe (Penny.Radun.T Penny.RadPer.T)" [color=black];
"Prelude.Maybe (Penny.Radun.T Penny.RadPer.T) Nothing" [shape=box, label=Nothing, color=black];
"Prelude.Maybe (Penny.Radun.T Penny.RadPer.T)" -> "Prelude.Maybe (Penny.Radun.T Penny.RadPer.T) Nothing" [style=dotted];
"Prelude.Maybe (Penny.Radun.T Penny.RadPer.T) Just" [shape=box, label=Just, color=black];
"Prelude.Maybe (Penny.Radun.T Penny.RadPer.T) Just" -> "Penny.Radun.T Penny.RadPer.T";
"Prelude.Maybe (Penny.Radun.T Penny.RadPer.T)" -> "Prelude.Maybe (Penny.Radun.T Penny.RadPer.T) Just" [style=dotted];
"Prelude.Maybe Penny.Zeroes.T" [color=black];
"Prelude.Maybe Penny.Zeroes.T Nothing" [shape=box, label=Nothing, color=black];
"Prelude.Maybe Penny.Zeroes.T" -> "Prelude.Maybe Penny.Zeroes.T Nothing" [style=dotted];
"Prelude.Maybe Penny.Zeroes.T Just" [shape=box, label=Just, color=black];
"Prelude.Maybe Penny.Zeroes.T Just" -> "Penny.Zeroes.T";
"Prelude.Maybe Penny.Zeroes.T" -> "Prelude.Maybe Penny.Zeroes.T Just" [style=dotted];
"Prelude.Maybe Prelude.Int" [color=black];
"Prelude.Maybe Prelude.Int Nothing" [shape=box, label=Nothing, color=black];
"Prelude.Maybe Prelude.Int" -> "Prelude.Maybe Prelude.Int Nothing" [style=dotted];
"Prelude.Maybe Prelude.Int Just" [shape=box, label=Just, color=black];
"Prelude.Maybe Prelude.Int Just" -> "Prelude.Int";
"Prelude.Maybe Prelude.Int" -> "Prelude.Maybe Prelude.Int Just" [style=dotted];
"Prelude.Maybe Prelude.Bool" [color=black];
"Prelude.Maybe Prelude.Bool Nothing" [shape=box, label=Nothing, color=black];
"Prelude.Maybe Prelude.Bool" -> "Prelude.Maybe Prelude.Bool Nothing" [style=dotted];
"Prelude.Maybe Prelude.Bool Just" [shape=box, label=Just, color=black];
"Prelude.Maybe Prelude.Bool Just" -> "Prelude.Bool";
"Prelude.Maybe Prelude.Bool" -> "Prelude.Maybe Prelude.Bool Just" [style=dotted];
"Prelude.Either Prelude.Int Prelude.Bool" [color=black];
"Prelude.Either Prelude.Int Prelude.Bool Left" [shape=box, label=Left, color=black];
"Prelude.Either Prelude.Int Prelude.Bool Left" -> "Prelude.Int";
"Prelude.Either Prelude.Int Prelude.Bool" -> "Prelude.Either Prelude.Int Prelude.Bool Left" [style=dotted];
"Prelude.Either Prelude.Int Prelude.Bool Right" [shape=box, label=Right, color=black];
"Prelude.Either Prelude.Int Prelude.Bool Right" -> "Prelude.Bool";
"Prelude.Either Prelude.Int Prelude.Bool" -> "Prelude.Either Prelude.Int Prelude.Bool Right" [style=dotted];
}
