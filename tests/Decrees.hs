-- | This module generated by the Quickpull package.
-- Quickpull is available at:
-- <http://www.github.com/massysett/quickpull>

module Decrees where

import Quickpull
import qualified Penny.Copper.Properties

decrees :: [Decree]
decrees =

  [ Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 82, qName = "prop_RadixRadCom"} ) ( Single Penny.Copper.Properties.prop_RadixRadCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 85, qName = "prop_RadixRadPer"} ) ( Single Penny.Copper.Properties.prop_RadixRadPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 88, qName = "prop_Grouper"} ) ( Single Penny.Copper.Properties.prop_Grouper )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 91, qName = "prop_RadCom"} ) ( Single Penny.Copper.Properties.prop_RadCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 94, qName = "prop_RadPer"} ) ( Single Penny.Copper.Properties.prop_RadPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 97, qName = "prop_Zero"} ) ( Single Penny.Copper.Properties.prop_Zero )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 100, qName = "prop_nilUngroupedPer"} ) ( Single Penny.Copper.Properties.prop_nilUngroupedPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 103, qName = "prop_nilUngroupedCom"} ) ( Single Penny.Copper.Properties.prop_nilUngroupedCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 106, qName = "prop_nilGroupedCom"} ) ( Single Penny.Copper.Properties.prop_nilGroupedCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 109, qName = "prop_nilGroupedPer"} ) ( Single Penny.Copper.Properties.prop_nilGroupedPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 112, qName = "prop_nilPer"} ) ( Single Penny.Copper.Properties.prop_nilPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 115, qName = "prop_nilCom"} ) ( Single Penny.Copper.Properties.prop_nilCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 120, qName = "prop_BG8Per"} ) ( Single Penny.Copper.Properties.prop_BG8Per )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 123, qName = "prop_BG7Per"} ) ( Single Penny.Copper.Properties.prop_BG7Per )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 126, qName = "prop_BG6Per"} ) ( Single Penny.Copper.Properties.prop_BG6Per )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 129, qName = "prop_BG5Per"} ) ( Single Penny.Copper.Properties.prop_BG5Per )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 132, qName = "prop_BG1Per"} ) ( Single Penny.Copper.Properties.prop_BG1Per )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 135, qName = "prop_BrimUngroupedPer"} ) ( Single Penny.Copper.Properties.prop_BrimUngroupedPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 138, qName = "prop_BrimGroupedPer"} ) ( Single Penny.Copper.Properties.prop_BrimGroupedPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 141, qName = "prop_BrimPer"} ) ( Single Penny.Copper.Properties.prop_BrimPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 144, qName = "prop_NilOrBrimScalarPer"} ) ( Single Penny.Copper.Properties.prop_NilOrBrimScalarPer )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 147, qName = "prop_BG8Com"} ) ( Single Penny.Copper.Properties.prop_BG8Com )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 150, qName = "prop_BG7Com"} ) ( Single Penny.Copper.Properties.prop_BG7Com )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 153, qName = "prop_BG6Com"} ) ( Single Penny.Copper.Properties.prop_BG6Com )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 156, qName = "prop_BG5Com"} ) ( Single Penny.Copper.Properties.prop_BG5Com )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 159, qName = "prop_BG1Com"} ) ( Single Penny.Copper.Properties.prop_BG1Com )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 162, qName = "prop_BrimUngroupedCom"} ) ( Single Penny.Copper.Properties.prop_BrimUngroupedCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 165, qName = "prop_BrimGroupedCom"} ) ( Single Penny.Copper.Properties.prop_BrimGroupedCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 168, qName = "prop_BrimCom"} ) ( Single Penny.Copper.Properties.prop_BrimCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 171, qName = "prop_NilOrBrimScalarCom"} ) ( Single Penny.Copper.Properties.prop_NilOrBrimScalarCom )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 176, qName = "prop_Hash"} ) ( Single Penny.Copper.Properties.prop_Hash )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 179, qName = "prop_Newline"} ) ( Single Penny.Copper.Properties.prop_Newline )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 182, qName = "prop_Comment"} ) ( Single Penny.Copper.Properties.prop_Comment )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 185, qName = "prop_DigitsFour"} ) ( Single Penny.Copper.Properties.prop_DigitsFour )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 188, qName = "prop_Digits1or2"} ) ( Single Penny.Copper.Properties.prop_Digits1or2 )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 191, qName = "prop_DateSep"} ) ( Single Penny.Copper.Properties.prop_DateSep )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 194, qName = "prop_DateA"} ) ( Single Penny.Copper.Properties.prop_DateA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 197, qName = "prop_Colon"} ) ( Single Penny.Copper.Properties.prop_Colon )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 200, qName = "prop_TimeA"} ) ( Single Penny.Copper.Properties.prop_TimeA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 203, qName = "prop_ZoneA"} ) ( Single Penny.Copper.Properties.prop_ZoneA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 206, qName = "prop_DoubleQuote"} ) ( Single Penny.Copper.Properties.prop_DoubleQuote )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 209, qName = "prop_Backslash"} ) ( Single Penny.Copper.Properties.prop_Backslash )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 212, qName = "prop_White"} ) ( Single Penny.Copper.Properties.prop_White )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 215, qName = "prop_Whites"} ) ( Single Penny.Copper.Properties.prop_Whites )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 218, qName = "prop_EscPayload"} ) ( Single Penny.Copper.Properties.prop_EscPayload )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 221, qName = "prop_EscSeq"} ) ( Single Penny.Copper.Properties.prop_EscSeq )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 224, qName = "prop_QuotedChar"} ) ( Single Penny.Copper.Properties.prop_QuotedChar )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 227, qName = "prop_QuotedString"} ) ( Single Penny.Copper.Properties.prop_QuotedString )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 230, qName = "prop_UnquotedString"} ) ( Single Penny.Copper.Properties.prop_UnquotedString )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 233, qName = "prop_UnquotedCommodityOnLeft"} ) ( Single Penny.Copper.Properties.prop_UnquotedCommodityOnLeft )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 236, qName = "prop_UnquotedCommodityOnRight"} ) ( Single Penny.Copper.Properties.prop_UnquotedCommodityOnRight )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 239, qName = "prop_QuotedCommodity"} ) ( Single Penny.Copper.Properties.prop_QuotedCommodity )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 242, qName = "prop_CommodityA"} ) ( Single Penny.Copper.Properties.prop_CommodityA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 245, qName = "prop_CommodityOnLeft"} ) ( Single Penny.Copper.Properties.prop_CommodityOnLeft )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 248, qName = "prop_CommodityOnRight"} ) ( Single Penny.Copper.Properties.prop_CommodityOnRight )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 251, qName = "prop_Backtick"} ) ( Single Penny.Copper.Properties.prop_Backtick )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 254, qName = "prop_NonNeutral"} ) ( Single Penny.Copper.Properties.prop_NonNeutral )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 257, qName = "prop_NeutralOrNon"} ) ( Single Penny.Copper.Properties.prop_NeutralOrNon )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 260, qName = "prop_TrioA"} ) ( Single Penny.Copper.Properties.prop_TrioA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 263, qName = "prop_OpenSquare"} ) ( Single Penny.Copper.Properties.prop_OpenSquare )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 266, qName = "prop_CloseSquare"} ) ( Single Penny.Copper.Properties.prop_CloseSquare )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 269, qName = "prop_IntegerA"} ) ( Single Penny.Copper.Properties.prop_IntegerA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 272, qName = "prop_ScalarA"} ) ( Single Penny.Copper.Properties.prop_ScalarA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 275, qName = "prop_BracketedForest"} ) ( Single Penny.Copper.Properties.prop_BracketedForest )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 278, qName = "prop_ForestA"} ) ( Single Penny.Copper.Properties.prop_ForestA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 281, qName = "prop_TreeA"} ) ( Single Penny.Copper.Properties.prop_TreeA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 284, qName = "prop_TopLineA"} ) ( Single Penny.Copper.Properties.prop_TopLineA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 287, qName = "prop_PostingA"} ) ( Single Penny.Copper.Properties.prop_PostingA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 290, qName = "prop_PostingsA"} ) ( Single Penny.Copper.Properties.prop_PostingsA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 293, qName = "prop_Semicolon"} ) ( Single Penny.Copper.Properties.prop_Semicolon )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 296, qName = "prop_OpenCurly"} ) ( Single Penny.Copper.Properties.prop_OpenCurly )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 299, qName = "prop_CloseCurly"} ) ( Single Penny.Copper.Properties.prop_CloseCurly )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 302, qName = "prop_CommaA"} ) ( Single Penny.Copper.Properties.prop_CommaA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 305, qName = "prop_PostingList"} ) ( Single Penny.Copper.Properties.prop_PostingList )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 308, qName = "prop_TransactionA"} ) ( Single Penny.Copper.Properties.prop_TransactionA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 311, qName = "prop_AtSign"} ) ( Single Penny.Copper.Properties.prop_AtSign )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 314, qName = "prop_PriceA"} ) ( Single Penny.Copper.Properties.prop_PriceA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 317, qName = "prop_ExchA"} ) ( Single Penny.Copper.Properties.prop_ExchA )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 320, qName = "prop_FileItem"} ) ( Single Penny.Copper.Properties.prop_FileItem )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 323, qName = "prop_FileItems"} ) ( Single Penny.Copper.Properties.prop_FileItems )
  , Decree ( Meta {modDesc = ModDesc {modPath = "tests/Penny/Copper/Properties.hs", modName = ["Penny","Copper","Properties"]}, linenum = 326, qName = "prop_File"} ) ( Single Penny.Copper.Properties.prop_File )
  ]
